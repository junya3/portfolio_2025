---
import { Image } from 'astro:assets';

import '/src/assets/css/reset.css';
import '/src/assets/css/font.css';

import Header from '/src/components/Header.astro';
import Footer from '/src/components/Footer.astro';
const { frontmatter } = Astro.props;
---

<!doctype html>
<html lang='ja'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <link
      rel='icon'
      type='image/png'
      href='/favicon/favicon-96x96.png'
      sizes='96x96'
    />
    <link rel='icon' type='image/svg+xml' href='/favicon/favicon.svg' />
    <link rel='shortcut icon' href='/favicon/favicon.ico' />
    <link
      rel='apple-touch-icon'
      sizes='180x180'
      href='/favicon/apple-touch-icon.png'
    />
    <meta name='apple-mobile-web-app-title' content='junya03.com' />
    <link rel='manifest' href='/favicon/site.webmanifest' />

    <meta
      name='description'
      content='コーヒーを愛するフロントエンドエンジニアとして、日常生活やこれまでの制作物を紹介しています。制作事例では作品の詳細を、ブログでは趣味や技術に関する記事を掲載しています。'
    />
    <title>Junya03 | {frontmatter.title}</title>
  </head>
  <body>
    <Header />
    <main>
      <article>
        <!-- ここに挿入したい -->
        <Image
          src={frontmatter.image}
          alt={frontmatter.title}
          width='720'
          height='480'
          id='top-image'
        />

        <hgroup>
          <h2>{frontmatter.title}</h2>
          <p class='hash'>
            {frontmatter.tags.map((tag: any) => <a href={`/${tag}`}>{tag}</a>)}
          </p>
          <p class='date'>{frontmatter.date}</p>
        </hgroup>
        <div class='contents'>
          <p>{frontmatter.description}</p>
          {
            frontmatter.detail && (
              <ul id='detail'>
                {Object.entries(frontmatter.detail).map(([key, value]) => (
                  <li>
                    <p>{key}</p>
                    <p>{value}</p>
                  </li>
                ))}
              </ul>
            )
          }
          {
            frontmatter.href &&
              Object.entries(frontmatter.href).map(([key, value]) => (
                <a class='btn' href={value as string} target='_blank'>
                  {key}
                </a>
              ))
          }
          <hr />
          <slot />
        </div>
      </article>
    </main>
    <Footer />
    <script type='module' src='/src/assets/js/lenis.js'></script>
  </body>
</html>

<style is:inline>
  /* parts style */

  pre {
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: scroll;
    margin-block: 1rem;
    line-height: 1.5;
    width: 100%;
    box-sizing: border-box;
    code {
      background: none;
    }
  }
  code .line span {
    text-wrap: wrap;
  }
  code {
    background: color-mix(in srgb, #ccc 40%, #0000);
    padding-inline: 0.2em;
    border-radius: 4px;
    font-size: 0.875rem;
  }

  h2 {
    font-size: 1.5rem;
    padding-bottom: 1rem;
    font-weight: 600;
  }

  h3 {
    font-size: 1.25rem;
    font-weight: 600;
    padding: 1rem;
    margin-block: 1rem;
    border-left: 8px solid;
    border-bottom: 1px solid;
  }

  h4 {
    font-size: 1.125rem;
    font-weight: 600;
    margin-block: 0.5rem;
    line-height: 1.5;
    display: flex;
    gap: 1rem;
    &::before {
      content: '『';
    }
    &::after {
      content: '』';
    }
  }

  strong {
    padding: 0 0.5rem;
    background: #000;
    color: #fff;
  }

  .hash {
    display: flex;
    gap: 0.5rem;
    padding-bottom: 0;
    font-weight: 400;
    a {
      font-size: 0.75rem;
      &::before {
        content: '#';
      }
    }
  }
  .date {
    font-size: 0.75rem;
  }
  #detail {
    display: grid;
    li {
      list-style: none;
      margin: 0;
      display: grid;
      grid-template-columns: subgrid;
      grid-column: span 2;
      p + p::before {
        content: ':';
        margin-right: 1rem;
      }
    }
  }

  .contents {
    ul {
      margin-block: 0.5rem 1rem;
    }

    li {
      list-style: disc;
      line-height: 2;
      font-size: 1rem;
      margin-left: 1.25em;
    }
    a {
      display: inline-block;
      inline-size: fit-content;
      font-size: 1rem;
      font-weight: 400;
      line-height: 1.5;
      padding: 0 0.5rem;
      background: #000;
      color: #fff;
      border: 1px solid;
      transition:
        color 0.3s,
        background 0.3s;
      &:hover,
      &:focus {
        text-decoration: none;
        color: #000;
        background: transparent;
      }
    }
    .btn {
      padding: 0.5rem 1rem;
    }
    .image-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: var(--gap);
      img {
        aspect-ratio: 1/1;
        object-fit: cover;
      }
    }
  }

  /* default style */
  :root {
    --sm-width: 428px;
    --lg-width: 960px;

    --gap: 0.75rem;

    --text-black: #333;
  }

  html {
    font-family: 'LINESeedJP_OTF', sans-serif;
    font-weight: 400;
    font-style: normal;
    line-height: 1.5;
    letter-spacing: 0.04;
    box-sizing: border-box;
    scroll-behavior: smooth;

    /* background: #efefef; */
  }
  body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
  main {
    padding-block: 1.5rem;
    display: grid;
    gap: 3.75rem;
  }
  article {
    width: min(100% - 5rem, 600px);
    margin-inline: auto;
    @media (max-width: 768px) {
      width: min(100% - 2rem, 600px);
    }
  }
  button {
    background-color: transparent;
    border: none;
    cursor: pointer;
    outline: none;
    padding: 0;
    appearance: none;
  }
  img {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    &#top-image {
      aspect-ratio: 16/9;
    }
  }
  .contents img {
    margin-block: 2rem;
  }

  a {
    text-decoration: none;
    color: inherit;
    &:hover,
    &:focus {
      text-decoration: underline;
    }
  }

  p {
    line-height: 2;
    text-align: justify;
  }
  hr {
    margin-block: 2rem;
  }

  hgroup {
    margin-bottom: 1rem;
  }
</style>
